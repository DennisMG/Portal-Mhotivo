@model Mhotivo.Models.StudentEditModel

@{
    ViewBag.Title = "Editar Estudiante";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script src="~/Scripts/jquery.maskedinput.min.js"></script>

<div id="body" class="modal-body" style="max-height: 500px;">
@using (Html.BeginForm("Edit", "student", FormMethod.Post, new
{
    id = "Form"
    ,@class = "form-horizontal"
    ,@Style = "margin:0;"
    ,enctype = "multipart/form-data"
    ,method = "post"
}))
{@Html.ValidationSummary(true)

    <fieldset>
        <legend>Editar Estudiante</legend>

        @Html.HiddenFor(model => model.Id)
        <p class="text-error">
            @Html.ValidationMessageFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.IdNumber)
            @Html.ValidationMessageFor(model => model.City)
            @Html.ValidationMessageFor(model => model.FilePicture)
            @Html.ValidationMessageFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.MyGender)
            @Html.ValidationMessageFor(model => model.State)
            @Html.ValidationMessageFor(model => model.BloodType)
            @Html.ValidationMessageFor(model => model.AccountNumber)
            @Html.ValidationMessageFor(model => model.Tutor1)
        </p>

        <div id="Photo">
            @{
                var imgSrc = "";
                if (Model.Photo != null)
                {
                    var base64 = Convert.ToBase64String(Model.Photo);
                    imgSrc = String.Format("data:image/jpeg;base64,{0}", base64);
                }
            }
            @Html.HiddenFor(x => x.Photo)
            <img height="150" width="150" src="@imgSrc" />
        </div>



        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.IdNumber)
            </div>
            <div class="controls">
                @*@Html.EditorFor(model => model.IDNumber)*@
                
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('.input-mask-idNumber').mask('9999-9999-99999');
                    });
                </script>
               
                @Html.TextBoxFor(model => model.IdNumber, new { @class="input-large input-mask-idNumber"})
                
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.FirstName)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.FirstName)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.LastName)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.LastName)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                Fecha de Nacimiento
            </div>
            <div class="controls">
                <div id="Days" style="float: left; width: 75px;">
                    @Html.DropDownList("Day", (SelectList)ViewBag.Days, new { style = "width:75px" })
                </div>
                <div id="Months" style="float: left; width: 75px;">
                    @Html.DropDownListFor(model => model.Month, (SelectList)ViewBag.Months, new { style = "width:75px" })
                </div>
                <div id="Years" style="float: left; width: 75px;">
                    @Html.DropDownListFor(model => model.Year, (SelectList)ViewBag.Years, new { style = "width:75px" })
                </div>
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.MyGender)
            </div>
            <div class="controls">
                @Html.DropDownListFor(x => x.MyGender, (List<SelectListItem>)ViewBag.Genders)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.Address)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.Address)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.City)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.City)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.State)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.State)
            </div>
        </div>
        
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.BloodType)
            </div>
            <div class="controls">
                @Html.DropDownListFor(model => model.BloodType, new SelectList(new[] { "O-", "O+", "A-", "A+", "B-", "B+", "AB-", "AB+" }), "-- Tipo de Sangre --")
                <p class="text-error">@Html.ValidationMessageFor(model => model.BloodType)</p>
            </div>
        </div>
           
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.AccountNumber)
            </div>
            <div class="controls">
                @Html.EditorFor(model => model.AccountNumber)
            </div>
        </div>

        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.Tutor1)
            </div>
            <div class="controls">
                @Html.DropDownList("Tutor1Id", "--Tutor--")
            </div>
        </div>
        
        <div class="control-group">
            <div class="control-label">
                @Html.LabelFor(model => model.Photo)
            </div>
            <div class="controls">
                @Html.TextBoxFor(m => m.FilePicture, new { type = "file" })<br />
                @Html.ValidationMessageFor(model => model.FilePicture)
            </div>
        </div>

        <div class="space"></div>

        <div class="modal-footer">
            <a href="~/Student/Index" data-dismiss="modal" class="btn btn-small">
                <i class="icon-remove"></i>
                Cancelar
            </a>
            <button type="submit" class="btn btn-small btn-primary">
                <i class="icon-ok"></i>
                Actualizar
            </button>
        </div>
    </fieldset>
}

</div>
<script type="text/javascript">
    $('#Months').change(updateSections);
    $('#Years').change(updateSections);
    function updateSections() {
        $.ajax({
            url: '@Url.Action("GetDaysForMonthAndYear", "DateTime")',
            cache: false,
            type: 'POST',
            data: 'month='+parseInt($('#Months option:selected').val())+'&year='+parseInt($('#Years option:selected').val()),
            datatype: "json",
            success: function (data) {
                debugger;
                $('#Day').empty();
                $.each($(data), function (i, optionavailable) {
                    $('#Day').append("<option value='" + optionavailable.Value + "'>" + optionavailable.Text + "</option>");
                });
            }
        });
    }
</script>